import os
import time
import psycopg2
from psycopg2.extras import RealDictCursor
import telebot
from telebot import types

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ======
TOKEN = os.getenv("TOKEN")
CHANNEL = os.getenv("CHANNEL", "@FlowersMindale")

bot = telebot.TeleBot(TOKEN)

DB_HOST = os.getenv("DB_HOST", "db")
DB_PORT = int(os.getenv("DB_PORT", 5432))
DB_NAME = os.getenv("DB_NAME", "botdb")
DB_USER = os.getenv("DB_USER", "botuser")
DB_PASS = os.getenv("DB_PASS", "botpass")

# ====== –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Å retry ======
def get_connection():
    while True:
        try:
            conn = psycopg2.connect(
                host=DB_HOST,
                port=DB_PORT,
                database=DB_NAME,
                user=DB_USER,
                password=DB_PASS,
                cursor_factory=RealDictCursor
            )
            return conn
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ: {e}. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            time.sleep(5)

conn = get_connection()
cursor = conn.cursor()

# ====== –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ======
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    id BIGINT PRIMARY KEY,
    username TEXT,
    invited_by BIGINT,
    invites_count INT DEFAULT 0
);
""")
conn.commit()

# ====== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ ======
def is_subscribed(user_id):
    try:
        chat_member = bot.get_chat_member(CHANNEL, user_id)
        return chat_member.status in ["member", "creator", "administrator", "owner"]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

# ====== /start ======
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    username = message.from_user.username or "no_username"

    args = message.text.split()
    invited_by = int(args[1]) if len(args) > 1 else None

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    cursor.execute("SELECT * FROM users WHERE id = %s", (user_id,))
    user = cursor.fetchone()

    if not user:
        cursor.execute(
            "INSERT INTO users (id, username, invited_by) VALUES (%s, %s, %s)",
            (user_id, username, invited_by)
        )
        if invited_by:
            cursor.execute(
                "UPDATE users SET invites_count = invites_count + 1 WHERE id = %s",
                (invited_by,)
            )
        conn.commit()

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö
    cursor.execute("SELECT invites_count FROM users WHERE id = %s", (user_id,))
    row = cursor.fetchone()
    invites_count = row['invites_count'] if row else 0

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –∫–Ω–æ–ø–æ–∫
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.row(
        types.KeyboardButton("üì© –ü–æ–ª—É—á–∏—Ç—å –º–æ—é —Å—Å—ã–ª–∫—É")
    )
    keyboard.row(
        types.KeyboardButton(f"üë• –ú–æ–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è ({invites_count})")
    )
    keyboard.row(types.KeyboardButton("üèÜ –õ–∏–¥–µ—Ä—ã"))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ñ–∏—à—É
    with open("mindale.jpg", "rb") as photo:
        bot.send_photo(
            user_id,
            photo,
            caption=f"–ü—Ä–∏–≤–µ—Ç, {username}! üéâ –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ ‚Äî –ø–æ–¥–ø–∏—à–∏—Å—å –∏ –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π!"
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    bot.send_message(
        user_id,
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
        reply_markup=keyboard
    )


# ====== –ö–Ω–æ–ø–∫–∞: –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É ======
@bot.message_handler(func=lambda message: message.text == "üì© –ü–æ–ª—É—á–∏—Ç—å –º–æ—é —Å—Å—ã–ª–∫—É")
def get_link(message):
    user_id = message.from_user.id

    if is_subscribed(user_id):
        bot.send_message(
            user_id,
            f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω.\n"
            f"–í–æ—Ç —Ç–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:\n"
            f"https://t.me/{bot.get_me().username}?start={user_id}"
        )
    else:
        markup_inline = types.InlineKeyboardMarkup()
        btn_subscribe = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL[1:]}")
        markup_inline.add(btn_subscribe)
        bot.send_message(
            user_id,
            "‚ùå –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:",
            reply_markup=markup_inline
        )

# ====== –ö–Ω–æ–ø–∫–∞: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ======
@bot.message_handler(func=lambda message: message.text.startswith("üë• –ú–æ–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"))
def show_invitees(message):
    user_id = message.from_user.id
    cursor.execute("SELECT username FROM users WHERE invited_by = %s", (user_id,))
    rows = cursor.fetchall()
    
    if rows:
        invitees = "\n".join([f"- @{row['username']}" if row['username'] else "- (–±–µ–∑ username)" for row in rows])
        bot.send_message(user_id, f"üìã –¢—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª —Å–ª–µ–¥—É—é—â–∏—Ö –ª—é–¥–µ–π:\n{invitees}")
    else:
        bot.send_message(user_id, "‚ùå –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏—à—ë–ª –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ.")

# ====== –ö–Ω–æ–ø–∫–∞: –ª–∏–¥–µ—Ä—ã ======
@bot.message_handler(func=lambda message: message.text == "üèÜ –õ–∏–¥–µ—Ä—ã")
def show_leaders(message):
    cursor.execute("""
        SELECT username, invites_count 
        FROM users 
        ORDER BY invites_count DESC 
        LIMIT 15
    """)
    rows = cursor.fetchall()

    if not rows:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∫–∞ –Ω–µ—Ç –ª–∏–¥–µ—Ä–æ–≤.")
        return

    text_parts = []

    # ü•á –ü–æ–±–µ–¥–∏—Ç–µ–ª—å
    first = rows[0]
    first_username = f"@{first['username']}" if first['username'] else "(–±–µ–∑ username)"
    text_parts.append(
        f"–ü–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –Ω–æ –≤—Å–µ –º–æ–∂–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å—Å—è! üèÜ\n\n"
        f"üéÅ–ü–æ–ª—É—á–∞–µ—Ç –∫—É–ø–æ–Ω **3000‚ÇΩ** –∏ –º–∏—Å—Ç *Victoria‚Äôs Secret!*\n"
        f"- {first_username} ‚Äî {first['invites_count']} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π\n"
    )

    # ü•à 2‚Äì10 –º–µ—Å—Ç–∞
    if len(rows) > 1:
        text_parts.append("\nüéÅ –ü–æ–ª—É—á–∞—é—Ç –º–∏—Å—Ç *Victoria‚Äôs Secret!*\n")
        for row in rows[1:10]:
            username = f"@{row['username']}" if row['username'] else "(–±–µ–∑ username)"
            text_parts.append(f"- {username} ‚Äî {row['invites_count']} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π")

    #  –û—Å—Ç–∞–ª—å–Ω—ã–µ 11‚Äì15
    if len(rows) > 10:
        text_parts.append("\nü•â –ß—É—Ç—å-—á—É—Ç—å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–æ –ø—Ä–∏–∑–∞:\n")
        for row in rows[10:]:
            username = f"@{row['username']}" if row['username'] else "(–±–µ–∑ username)"
            text_parts.append(f"- {username} ‚Äî {row['invites_count']} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π")

    bot.send_message(
        message.chat.id,
        "\n".join(text_parts),
        parse_mode="Markdown"
    )
# ====== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ======
bot.infinity_polling()
